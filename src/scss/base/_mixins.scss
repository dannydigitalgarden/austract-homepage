/////////////////////
// General Mixins (put specific ones in component files where applicable)

/// Mixin - Clearfix.
/// Adds clearfix based on http://bourbon.io/docs/#clearfix
/// use example =   @include cleafix

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

/// Mixin - Wrapper
/// Outer container mixin for large screens
@mixin wrapper(
  $container-max-width: $max-width,
  $outer-container-break: $small,
  $v-margin: 0,
  $v-padding: 0,
  $h-padding: $space,
  $h-padding-large: $h-padding
) {
  max-width: #{$container-max-width};
  width: 100%;
  margin: #{$v-margin} auto;
  padding: #{$v-padding} #{$h-padding};

  @include breakpoint($outer-container-break) {
    padding: #{$v-padding} #{$h-padding-large};
  }

  @include breakpoint($container-max-width) {
    padding-left: calc(#{$h-padding-large} + calc(-50vw + calc(#{$container-max-width} / 2)));
    padding-right: calc(#{$h-padding-large} + calc(-50vw + calc(#{$container-max-width} / 2)));
  }
}

/// Use the breakout mixin for elements that should be edge-to-edge
/// Even when a parent container uses the wrapper mixin
@mixin breakout($v-padding: $space * 2) {
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
  padding-left: calc(#{$v-padding} + calc(-50vw + 50%));
  padding-right: calc(#{$v-padding} + calc(-50vw + 50%));
}

/// Mixin - Standard Margin
@mixin margin {
  margin-bottom: 1em;
}

@mixin no-bottom {
  margin-bottom: 0;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin set-breakpoint($breakpoint) {
  @if $breakpoint== "" {
    @content;
  } @else {
    $value: map-get($breakpoints, $breakpoint);

    @if $value !=null {
      @include breakpoint($value) {
        @content;
      }
    }
  }
}

@mixin bg-trans-color($direction, $color) {
  background: linear-gradient(to #{$direction}, rgba(0, 0, 0, 0), #{$color});
}

@mixin abs($top: 0, $left: 0, $x: 0, $y: 0) {
  left: $left;
  position: absolute;
  top: $top;

  @if $x !=0 and $y !=0 {
    transform: translate($x, $y);
  } @else if $y !=0 {
    transform: translateY($y);
  } @else if $x !=0 {
    transform: translateX($x);
  }
}

// FUNCTION FOR THE FLUID FONT MIXIN
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function if-important($important) {
  @return #{if($important, "!important", "")};
}

// FLUID FONT
$fluid-container-max-width: 100rem; // 1600px
$fluid-container-min-width: 24rem; 

/* stylelint-disable */
@mixin fluid-font($max-font-size, $fluid-font-scale: 0.5, $important: false) {
  $min-font-size: $max-font-size * $fluid-font-scale;

  font-size: $max-font-size if-important($important);

  @media screen and (max-width: $fluid-container-max-width) {
    font-size: calc(
        #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
          ((100vw - #{$fluid-container-min-width}) / #{strip-unit($fluid-container-max-width - $fluid-container-min-width)})
      )
      if-important($important);
  }

  @media screen and (max-width: $fluid-container-min-width) {
    font-size: $min-font-size if-important($important);
  }
}

@mixin arrow-right($color: $primary-color) {
  content: "";
  border: solid $color;
  border-width: 0 1px 1px 0;
  display: inline-block;
  padding: 3px;
  transform: rotate(-45deg);
}

@mixin triangle-right($color: $primary-color) {
  content: "";
  display: block;
  width: 0px;
  height: 0px;
  border: 5px solid transparent;
  border-left-color: $color;
  border-right-width: 0px;
}

@mixin menu-item-font-size {
  font-size: 16px;

  @include medium {
    font-size: 18px;
  }

  @include breakpoint(1440px) {
    font-size: 20px;
  }

  @include xl4 {
    font-size: 22px;
  }
}

@mixin sub-menu-item-font-size {
  font-size: 16px;

  @include breakpoint(1280px) {
    font-size: 18px;
  }

  @include xl4 {
    font-size: 20px;
  }
}

@mixin sub-menu-desc-font-size {
  font-size: 16px;

  @include xl4 {
    font-size: 18px;
  }
}


@mixin  container-padding-left($container-max-width: 1600px) {
  padding-left: calc((#{$container-max-width} - #{$hero-banner-width}) / 2);
}

@mixin divider {
  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 8px;
    background-image: $gradient-teal;
    margin-top: 2rem;

   @include large {
    width: 8px;
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
    margin-top: 0;
   }
}
}